/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package org.jetbrains.teamcity.rest.models

import com.google.gson.annotations.SerializedName
import org.jetbrains.teamcity.rest.base.*
import org.jetbrains.teamcity.rest.infrastructure.ApiClient
import org.jetbrains.teamcity.rest.infrastructure.RequestConfig
import java.time.LocalDateTime

/**
Represents a locator string for filtering Project entities.
Examples:
* `name:MyProject` – find a project with name MyProject.
* `archived:false` – find projects which are not archived.
 * @param singleValue Return a single value.
 * @param affectedProject Project (direct or indirect parent) locator.
 * @param archived Is archived.
 * @param build Build locator.
 * @param buildType Build type locator.
 * @param count For paginated calls, how many entities to return per page.
 * @param defaultTemplate Default template locator.
 * @param id 
 * @param internalId 
 * @param item [EXPERIMENTAL] Supply multiple locators and return a union of the results.
 * @param name 
 * @param pool Associated agent pool locator.
 * @param project Project (direct parent) locator.
 * @param projectFeature Project feature locator.
 * @param start For paginated calls, from which entity to start rendering the page.
 * @param uuid 
 * @param vcsRoot VCS root locator.
 */
class ProjectLocator(
    @SerializedName("\$singleValue") val singleValue: Boolean? = null,
    @SerializedName("affectedProject") val affectedProject: String? = null,
    @SerializedName("archived") val archived: Boolean? = null,
    @SerializedName("build") val build: String? = null,
    @SerializedName("buildType") val buildType: String? = null,
    @SerializedName("count") val count: Int? = null,
    @SerializedName("defaultTemplate") val defaultTemplate: String? = null,
    @SerializedName("id") val id: String? = null,
    @SerializedName("internalId") val internalId: String? = null,
    @SerializedName("item") val item: String? = null,
    @SerializedName("name") val name: String? = null,
    @SerializedName("pool") val pool: String? = null,
    @SerializedName("project") val project: String? = null,
    @SerializedName("projectFeature") val projectFeature: String? = null,
    @SerializedName("start") val start: Int? = null,
    @SerializedName("uuid") val uuid: String? = null,
    @SerializedName("vcsRoot") val vcsRoot: String? = null
) : LocatorEntity() {
    @Transient private val classModelName: String = "ProjectLocator"


}


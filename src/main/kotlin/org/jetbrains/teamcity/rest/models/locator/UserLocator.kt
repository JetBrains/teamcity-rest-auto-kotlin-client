/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package org.jetbrains.teamcity.rest.models

import com.google.gson.annotations.SerializedName
import org.jetbrains.teamcity.rest.base.*
import org.jetbrains.teamcity.rest.infrastructure.ApiClient
import org.jetbrains.teamcity.rest.infrastructure.RequestConfig
import java.time.LocalDateTime

/**
Represents a locator string for filtering User entities.
Examples:
* `name:John Doe` – find user with name John Doe.
* `group:<groupLocator>` – find all users in user group found by groupLocator.
 * @param affectedGroup User group (direct or indirect parent) locator.
 * @param email 
 * @param group User group (direct parent) locator.
 * @param id 
 * @param item [EXPERIMENTAL] Supply multiple locators and return a union of the results.
 * @param lastLogin 
 * @param name 
 * @param property Supported matchType values: 
- generic: exists/not-exists/equals/does-not-equal/starts-with/contains/does-not-contain/ends-with/any; 
- regular expressions: matches/does-not-match; 
- numeric: more-than/no-more-than/less-than/no-less-than; 
- version-specific: ver-more-than/ver-no-more-than/ver-less-than/ver-no-less-than.
 * @param role Role locator.
 * @param username 
 */
class UserLocator(
    @SerializedName("affectedGroup") val affectedGroup: String? = null,
    @SerializedName("email") val email: String? = null,
    @SerializedName("group") val group: String? = null,
    @SerializedName("id") val id: String? = null,
    @SerializedName("item") val item: String? = null,
    @SerializedName("lastLogin") val lastLogin: LocalDateTime? = null,
    @SerializedName("name") val name: String? = null,
    @SerializedName("property") val property: String? = null,
    @SerializedName("role") val role: String? = null,
    @SerializedName("username") val username: String? = null
) : LocatorEntity() {
    @Transient private val classModelName: String = "UserLocator"


}


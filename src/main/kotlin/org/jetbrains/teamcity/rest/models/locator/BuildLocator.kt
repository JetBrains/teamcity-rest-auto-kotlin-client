/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package org.jetbrains.teamcity.rest.models

import com.google.gson.annotations.SerializedName
import org.jetbrains.teamcity.rest.base.*
import org.jetbrains.teamcity.rest.infrastructure.ApiClient
import org.jetbrains.teamcity.rest.infrastructure.RequestConfig
import java.time.LocalDateTime

/**
Represents a locator string for filtering Build entities.
Examples:
* `id:1` – find build with ID 1.
* `buildType:<buildTypeLocator>` – find builds under build configuration found by buildTypeLocator.
* `defaultFilter:false,agent:<agentLocator>` – find builds executed on agent found by agentLocator, with defaultFilter disabled (see below).
 * @param singleValue Return a single value.
 * @param affectedProject Project (direct or indirect parent) locator.
 * @param agent Agent locator.
 * @param agentTypeId typeId of agent used to execute build.
 * @param any State can be any.
 * @param artifactDependency 
 * @param branch Branch locator.
 * @param buildType Build type locator.
 * @param canceled Is canceled.
 * @param compatibleAgent Agent locator.
 * @param composite Is composite.
 * @param count For paginated calls, how many entities to return per page.
 * @param defaultFilter If true, applies default filter which returns only "normal" builds (finished builds which are not canceled, not failed-to-start, not personal, and on default branch (in branched build configurations)).
 * @param failedToStart Is failed to start.
 * @param finishDate Requires either date or build dimension.
 * @param finished Is finished.
 * @param hanging Is hanging.
 * @param history Is history build.
 * @param id Entity ID.
 * @param item [EXPERIMENTAL] Supply multiple locators and return a union of the results.
 * @param lookupLimit Limit processing to the latest `<lookupLimit>` entities.
 * @param number 
 * @param personal Is a personal build.
 * @param pinned Is pinned.
 * @param project Project (direct parent) locator.
 * @param property Supported matchType values: 
- generic: exists/not-exists/equals/does-not-equal/starts-with/contains/does-not-contain/ends-with/any; 
- regular expressions: matches/does-not-match; 
- numeric: more-than/no-more-than/less-than/no-less-than; 
- version-specific: ver-more-than/ver-no-more-than/ver-less-than/ver-no-less-than.
 * @param queued Is queued.
 * @param queuedDate Requires either date or build dimension.
 * @param running Is running.
 * @param snapshotDependency 
 * @param start For paginated calls, from which entity to start rendering the page.
 * @param startDate Requires either date or build dimension.
 * @param state Supported values: queued/running/finished/any.
 * @param status 
 * @param tag Tag locator.
 * @param taskId ID of a build or build promotion.
 * @param user User locator.
 */
class BuildLocator(
    @SerializedName("\$singleValue") val singleValue: Boolean? = null,
    @SerializedName("affectedProject") val affectedProject: String? = null,
    @SerializedName("agent") val agent: String? = null,
    @SerializedName("agentTypeId") val agentTypeId: Int? = null,
    @SerializedName("any") val any: Boolean? = null,
    @SerializedName("artifactDependency") val artifactDependency: String? = null,
    @SerializedName("branch") val branch: String? = null,
    @SerializedName("buildType") val buildType: String? = null,
    @SerializedName("canceled") val canceled: Boolean? = null,
    @SerializedName("compatibleAgent") val compatibleAgent: String? = null,
    @SerializedName("composite") val composite: Boolean? = null,
    @SerializedName("count") val count: Int? = null,
    @SerializedName("defaultFilter") val defaultFilter: Boolean? = null,
    @SerializedName("failedToStart") val failedToStart: Boolean? = null,
    @SerializedName("finishDate") val finishDate: String? = null,
    @SerializedName("finished") val finished: Boolean? = null,
    @SerializedName("hanging") val hanging: Boolean? = null,
    @SerializedName("history") val history: Boolean? = null,
    @SerializedName("id") val id: Int? = null,
    @SerializedName("item") val item: String? = null,
    @SerializedName("lookupLimit") val lookupLimit: Int? = null,
    @SerializedName("number") val number: String? = null,
    @SerializedName("personal") val personal: Boolean? = null,
    @SerializedName("pinned") val pinned: Boolean? = null,
    @SerializedName("project") val project: String? = null,
    @SerializedName("property") val property: String? = null,
    @SerializedName("queued") val queued: Boolean? = null,
    @SerializedName("queuedDate") val queuedDate: String? = null,
    @SerializedName("running") val running: Boolean? = null,
    @SerializedName("snapshotDependency") val snapshotDependency: String? = null,
    @SerializedName("start") val start: Int? = null,
    @SerializedName("startDate") val startDate: String? = null,
    @SerializedName("state") val state: String? = null,
    @SerializedName("status") val status: String? = null,
    @SerializedName("tag") val tag: String? = null,
    @SerializedName("taskId") val taskId: Int? = null,
    @SerializedName("user") val user: String? = null
) : LocatorEntity() {
    @Transient private val classModelName: String = "BuildLocator"


}


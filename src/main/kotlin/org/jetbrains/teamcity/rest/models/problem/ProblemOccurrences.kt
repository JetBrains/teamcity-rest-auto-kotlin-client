/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package org.jetbrains.teamcity.rest.models

import com.google.gson.annotations.SerializedName
import org.jetbrains.teamcity.rest.base.*
import org.jetbrains.teamcity.rest.infrastructure.ApiClient
import org.jetbrains.teamcity.rest.infrastructure.RequestConfig
import java.time.LocalDateTime

/**
Represents a paginated list of ProblemOccurrence entities.
 * @param count 
 * @param href 
 * @param nextHref 
 * @param prevHref 
 * @param problemOccurrence 
 * @param passed 
 * @param failed 
 * @param newFailed 
 * @param ignored 
 * @param muted 
 */
data class ProblemOccurrences(
    @SerializedName("count") override val count: Int? = null,
    @SerializedName("href") override val href: String? = null,
    @SerializedName("nextHref") override val nextHref: String? = null,
    @SerializedName("prevHref") override val prevHref: String? = null,
    @SerializedName("problemOccurrence") val problemOccurrence: List<ProblemOccurrence>? = null,
    @SerializedName("passed") val passed: Int? = null,
    @SerializedName("failed") val failed: Int? = null,
    @SerializedName("newFailed") val newFailed: Int? = null,
    @SerializedName("ignored") val ignored: Int? = null,
    @SerializedName("muted") val muted: Int? = null
) : PaginatedEntity<ProblemOccurrence>() {
    @Transient private val classModelName: String = "problemOccurrences"

    override fun items(): List<ProblemOccurrence> {
        if (problemOccurrence == null)
            return emptyList()
        return problemOccurrence
    }

    override fun requestNextPage(apiClient: ApiClient, requestConfig: RequestConfig): ProblemOccurrences {
        val response = apiClient.request<ProblemOccurrences>(requestConfig)
        return ApiClient.processResponse(response)
    }

}

